// there is a lot of type error in python to raise

for example: TypeError, valueError, runtime error.

def divide(dividend, divisor):
	if divisor == 0:
		raise ZeroDivisionError("Divisor cannot be 0.")
	return dividend / divisor
	
grades = []

try:
	average = divide(sum(grades), len(grades))
except ZeroDivisionError as error:
	print(error)
else: 
	 print(f"The average grade is {average}") // basically if it succeded
finally:
	print("Thank you") // it will print any way
	
/// example

def divide(dividend, divisor):
	if divisor == 0: // if divisor is zero it will go to the except
		raise ZeroDivisionError("Divisor cannot be 0.")
	return dividend / divisor
	
students = [
	{"name": "Bob", "grades": [75, 90]},
	{"name": "Rolf", "grades": []},
	{"name": "Jen", "grades": [100, 90]}
]

try:
	for student in students:
		name = student["name"]
		grades = student["grades"]
		average = divide(sum(grades), len(grades))
		print(f"{name} averaged {average}.")
except ZeroDivisionError:
	print(f"ERROR: {name} has no grades!")
else:
	print("--All student averages calculated --")
finally:
	print("--End of student average calculation --")
	
