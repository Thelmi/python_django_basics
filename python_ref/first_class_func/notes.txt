def divide(dividend, divisor):
	if divisor == 0:
		raise ZeroDivisionError("Divisor cannot be 0.")
	return dividend / divisor
	
def calculate(*values, operator):
	return operator(*values)

result = calculate(20, 2, operator=divide)
print(result)

// another example

def search(sequence, expected, finder):
	for elem in sequence:
		if finder(elem) == expected:
			return elem
	raise RuntimeError(f"Could not find and element with {expected}.")

friends = [
	{"name": "Rolf Smith", "age": 24},
	{"name": "Adam Woo;", "age": 40},
	{"name": "Adam Wood", "age": 27}
]

def get_friend_name(friend):
	return friend["name"]

print(search(friends, "Rolf Smith", finder=get_friend_name))

// you can with lambda as well

def search(sequence, expected, finder):
	for elem in sequence:
		if finder(elem) == expected:
			return elem
	raise RuntimeError(f"Could not find and element with {expected}.")

friends = [
	{"name": "Rolf Smith", "age": 24},
	{"name": "Adam Woo;", "age": 40},
	{"name": "Adam Wood", "age": 27}
]

def get_friend_name(friend):
	return friend["name"]

print(search(friends, "Rolf Smith", lambda friend: friend["name"]))
